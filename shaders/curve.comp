#version 450

layout (rgba8, set = 0, binding = 0) writeonly uniform image2D image;

layout (push_constant) uniform Inputs {
  vec4 color;
  ivec2 offset;
  ivec2 dims;
  // float time;
} inputs;

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void main() {
  ivec2 xy = ivec2(gl_GlobalInvocationID.xy);

  if (xy.x >= inputs.dims.x || xy.y >= inputs.dims.y) {
    return;
  }

  ivec2 edges = inputs.offset + inputs.dims;

  ivec2 dst_xy = xy + inputs.offset;

  float t = float(xy.x) / float(inputs.dims.x);

  float ny = float(xy.y) / float(inputs.dims.y);

  ny = (ny - 0.5) * 2.0;

  vec4 color;

  if (abs(sin(t * 3.141592 * 2.0) - ny) < 0.01) {
    color = vec4(1.0);
  } else {
    color = vec4(0.0, 0.0, 0.0, 1.0);
  }

  imageStore(image, dst_xy, color);
  // imageStore(image, dst_xy, inputs.color);
}
