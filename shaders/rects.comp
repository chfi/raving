#version 450

struct Rect {
  ivec2 pos;
  ivec2 dims;
  vec4 color;
};

layout (set = 0, binding = 0) readonly buffer RectData {
  Rect data[];
} rects;

layout (rgba8, set = 0, binding = 1) writeonly uniform image2D image_out;

layout (push_constant) uniform Inputs {
  int img_width;
  int img_height;
} inputs;

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;


void main() {
  uint rect_ix = gl_WorkGroupID.z;

  ivec2 global = ivec2(gl_GlobalInvocationID.xy);
  ivec2 local_pos = ivec2(gl_LocalInvocationID.xy);

  ivec2 r_pos = rects.data[rect_ix].pos;
  ivec2 r_dims = rects.data[rect_ix].dims;

  // ivec2 r_pos = ivec2(100, 100);
  // ivec2 r_dims = ivec2(100, 100);

  vec4 color = rects.data[rect_ix].color;
  // vec4 color = vec4(0.3, 0.3, 0.3, 1.0);

  // vec4 color = vec4(local_pos.x

  ivec2 pixel = global;

  // imageStore(image_out, pixel,

  if (pixel.x >= r_pos.x + r_dims.x
      || pixel.y >= r_pos.y + r_dims.y
      || pixel.x < r_pos.x
      || pixel.y < r_pos.y) {
    return;
  }

  imageStore(image_out, pixel, color);

}
